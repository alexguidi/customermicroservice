package com.guidi.customermicroservice.services;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.guidi.customermicroservice.model.Customer;
import com.guidi.customermicroservice.repository.CustomerRepository;

/**This is the service class responsible to interact with mongodb
 * across CustomerRepository object. CustomerRepository object is an interface
 * and a real implementation class will be generated by spring framework in 
 * run time.
 * 
 * This service is annotated with @Service("v1"), this give flexibility
 * to controller, if a new version of service is created controller need only
 * to change to the new version.
 * 
 * @author Alex Guidi
 *
 */
@Service("v1")
public class CustomerServiceV1Impl implements CustomerService {
	
	/**A concrete object will be created during run time provided by 
	 * spring framework.
	 * 
	 */
	@Autowired
	CustomerRepository customerRepository;

	/**
	 * This is the method responsible to get all customers in mongodb
	 * based in the pagination passed in request.
	 */
	@Override
	public List<Customer> findAll(Pageable pageable) {
		Page<Customer> pageCustomer = customerRepository.findAll(pageable);
		return pageCustomer.getContent();
	}

	/**
	 * This is the method responsible to save a new customer in mongodb.
	 */
	@Override
	public Customer save(Customer customer) {
		return customerRepository.save(customer);
	}

	/**
	 * This is the method responsible to retrieve a customer from mongodb
	 * based in idNumber passed during the request.
	 */
	@Override
	public Optional<Customer> findByID(String idNumber) {
		return customerRepository.findById(idNumber);
	}

	/**
	 * This methods remove a customer from mongo db based in idNumber parameter
	 * passed during the request.
	 */
	@Override
	public void removeCustomer(String idNumber) {
    	Customer st = new Customer();
    	st.setIdNumber(idNumber);
    	customerRepository.delete(st);		
	}
}
